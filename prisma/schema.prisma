generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  googleId  String   @unique()
  name      String   @unique()
  email     String   @unique()
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt()

  ownedOrganizations Organization[]       @relation("OrganizationOwner")
  organizations      OrganizationMember[]

  ownedProjects Project[]       @relation("ProjectOwner")
  projects      ProjectMember[]

  @@map("user")
}

model Organization {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt()

  owner   User   @relation("OrganizationOwner", fields: [ownerId], references: [id])
  ownerId String @db.ObjectId

  members  OrganizationMember[]
  projects Project[]

  @@map("organization")
}

model OrganizationMember {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  organization   Organization @relation(fields: [organizationId], references: [id], onDelete: Cascade)
  organizationId String       @db.ObjectId

  @@unique([userId, organizationId])
  @@map("organizationMember")
}

model Project {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt()

  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId String       @db.ObjectId

  owner   User   @relation("ProjectOwner", fields: [ownerId], references: [id])
  ownerId String @db.ObjectId

  members ProjectMember[]

  @@map("project")
}

model ProjectMember {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.ObjectId

  project   Project @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId String  @db.ObjectId

  @@unique([userId, projectId])
  @@map("projectMember")
}
